{"version":3,"file":"IncomingMessage.js","sourceRoot":"","sources":["../src/IncomingMessage.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAEA,8DAAsC;AACtC,oDAAkC;AAClC,6BAA0B;AAC1B,qCAAkC;AAClC,qCAAkC;AAElC,MAAM,kBAAkB,GAAG,GAAG,CAAC;AAE/B,MAAa,eAAgB,SAAQ,gBAAY;IAyB/C,YACU,GAAoB,EACpB,GAAqB,EACrB,cAAwB,EACxB,GAAQ;QAEhB,KAAK,EAAE,CAAC;QALA,QAAG,GAAH,GAAG,CAAiB;QACpB,QAAG,GAAH,GAAG,CAAkB;QACrB,mBAAc,GAAd,cAAc,CAAU;QACxB,QAAG,GAAH,GAAG,CAAK;QAzBlB,4CAA4C;QAE5C,wBAAwB;QACxB,yBAAyB;QACjB,aAAQ,GAAW,EAAE,CAAC;QAGtB,aAAQ,GAA6B,EAAE,CAAC;QAKxC,mBAAc,GAAG,EAAE,KAAK,EAAE,EAAE,EAAE,CAAC;QAIvC,aAAa;QACN,WAAM,GAAG,IAAI,eAAM,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;QAExC,sDAAyB;QAUvB,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;QACnB,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,GAAG,EAAE,KAAK,EAAE,EAAE;YAC9B,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;YAE3B,uCAAuC;YACvC,IAAI,GAAG,KAAK,SAAS,EAAE;gBACrB,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,GAAG,KAAK,CAAC;aACnC;QACH,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC;QAC7B,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,SAAS,EAAE,CAAC,WAAW,EAAE,CAAC;QAEjD,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC;QACrC,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,GAAG,CAAC,sBAAsB,EAAE,CAAC;QAExD,IAAI,IAAI,CAAC,SAAS,EAAE;YAClB,IAAI,CAAC,GAAG,IAAI,IAAI,IAAI,CAAC,SAAS,EAAE,CAAC;SAClC;QAED,uBAAA,IAAI,uCAAuB,IAAI,SAAG,CAAC,gBAAgB,IAAI,CAAC,GAAG,EAAE,CAAC,MAAA,CAAC;IACjE,CAAC;IAED,IAAI,EAAE;QACJ,OAAO,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,QAAQ,EAAE,CAAC;IACrD,CAAC;IAED,IAAI,IAAI,CAAE,KAAU;QAClB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;IACzB,CAAC;IAED,IAAI,IAAI;QACN,OAAO,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,QAAQ,CAAC;IACzC,CAAC;IAED,IAAI,OAAO;QACT,OAAO,IAAI,CAAC,QAAQ,CAAC;IACvB,CAAC;IAED,IAAI,MAAM,CAAE,KAAK;QACf,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;IACvB,CAAC;IAED,IAAI,MAAM;QACR,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;YACjB,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;YAClB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,cAAc,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBACnD,MAAM,SAAS,GAAG,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;gBACzC,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;aACpD;SACF;QAED,OAAO,IAAI,CAAC,OAAO,CAAC;IACtB,CAAC;IAED,IAAI,KAAK;QACP,IAAG,CAAC,IAAI,CAAC,MAAM;YAAE,IAAI,CAAC,MAAM,GAAG,qBAAW,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QACjE,OAAO,IAAI,CAAC,MAAM,CAAC;IACrB,CAAC;IAED,IAAI,OAAO;QACT,OAAO,IAAI,CAAC,QAAQ,CAAC;IACvB,CAAC;IAED,IAAI,OAAO,CAAC,OAAO;QACjB,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;IAC1B,CAAC;IAED,IAAI,IAAI;QACN,MAAM,IAAI,GAAG,uBAAA,IAAI,2CAAoB,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC;QAC1E,OAAO,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;YAC5B,CAAC,CAAC,IAAI,IAAI,EAAE;YACZ,CAAC,CAAC,IAAI,CAAC;IACX,CAAC;IAED,GAAG,CAAC,IAAY;QACd,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;IAC3B,CAAC;IAED,MAAM,CAAC,IAAY;QACjB,IAAI,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;QAC1B,OAAO,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,SAAS,CAAC;IAC1C,CAAC;IAED,OAAO,CAAC,GAAG,IAAW;QACpB,OAAO,iBAAO,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;IAChD,CAAC;IAED,MAAM,KAAK,OAAO,IAAI,CAAC,CAAC,CAAC;IAEzB,EAAE,CAAC,KAAsB,EAAE,QAAkC;QAC3D,IAAI,KAAK,KAAK,MAAM,IAAI,IAAI,CAAC,QAAQ,KAAK,SAAS,EAAE;YACnD;;;eAGG;YACH,YAAY,CAAC,GAAG,EAAE;gBAChB,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;gBACxB,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBACjB,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YACrB,CAAC,CAAC,CAAC;SACJ;aAAM;YACL,KAAK,CAAC,EAAE,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;SAC3B;QACD,OAAO,IAAI,CAAC;IACd,CAAC;IAES,QAAQ;QAChB,OAAO,IAAI,OAAO,CAAU,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;YAC9C,IAAI,IAAY,CAAC;YAEjB,EAAE;YACF,oFAAoF;YACpF,wDAAwD;YACxD,EAAE;YACF,MAAM,gBAAgB,GAAG,UAAU,CAAC,GAAG,EAAE;gBACvC,IAAI,IAAI,EAAE;oBACR,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;oBAChC,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,GAAG,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;iBACtD;gBACD,MAAM,EAAE,CAAC;YACX,CAAC,EAAE,kBAAkB,CAAC,CAAC;YAEvB,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,WAAW,EAAE,MAAM,EAAE,EAAE;gBACtC,MAAM,KAAK,GAAG,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;gBACvC,IAAI,GAAG,CAAC,IAAI,IAAI,IAAI,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;gBAE1E,IAAI,MAAM,EAAE;oBACV,YAAY,CAAC,gBAAgB,CAAC,CAAC;oBAC/B,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;oBAChC,OAAO,CAAC,IAAI,CAAC,QAAQ,KAAK,EAAE,CAAC,CAAC;iBAC/B;YACH,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAA;IACJ,CAAC;CAEF;AAzKD,0CAyKC","sourcesContent":["import uWS from \"uWebSockets.js\";\nimport http from \"http\";\nimport querystring from \"querystring\";\nimport EventEmitter from \"events\";\nimport { URL } from \"url\";\nimport { Socket } from \"./Socket\";\nimport { request } from \"express\";\n\nconst READ_BODY_MAX_TIME = 500;\n\nexport class IncomingMessage extends EventEmitter implements http.IncomingMessage {\n  public url: string;\n  public method: string;\n\n  // public query: querystring.ParsedUrlQuery;\n\n  // private _url: string;\n  // private _path: string;\n  private _baseUrl: string = \"\";\n  private _rawquery: string;\n  private _query: querystring.ParsedUrlQuery;\n  private _headers: http.IncomingHttpHeaders = {};\n  private _params: {[name: string]: string};\n  private _bodydata: any;\n  private _rawbody: any;\n  private _remoteAddress: ArrayBuffer;\n  private _readableState = { pipes: [] };\n\n  public aborted: boolean;\n\n  // @ts-ignore\n  public socket = new Socket(false, true);\n\n  #_originalUrlParsed: URL;\n\n  constructor(\n    private req: uWS.HttpRequest,\n    private res: uWS.HttpResponse,\n    private parameterNames: string[],\n    private app: any,\n  ) {\n    super();\n\n    this._headers = {};\n    this.req.forEach((key, value) => {\n      this._headers[key] = value;\n\n      // workaround: also consider 'referrer'\n      if (key === \"referer\") {\n        this._headers['referrer'] = value;\n      }\n    });\n\n    this.url = this.req.getUrl();\n    this.method = this.req.getMethod().toUpperCase();\n\n    this._rawquery = this.req.getQuery();\n    this._remoteAddress = this.res.getRemoteAddressAsText();\n\n    if (this._rawquery) {\n      this.url += `?${this._rawquery}`;\n    }\n\n    this.#_originalUrlParsed = new URL(`http://server${this.url}`);\n  }\n\n  get ip () {\n    return Buffer.from(this._remoteAddress).toString();\n  }\n\n  set body (_body: any) {\n    this._bodydata = _body;\n  }\n\n  get body () {\n    return this._bodydata || this._rawbody;\n  }\n\n  get headers (): http.IncomingHttpHeaders {\n    return this._headers;\n  }\n\n  set params (value) {\n    this._params = value;\n  }\n\n  get params(): { [name: string]: string } {\n    if (!this._params) {\n      this._params = {};\n      for (let i = 0; i < this.parameterNames.length; i++) {\n        const paramName = this.parameterNames[i];\n        this._params[paramName] = this.req.getParameter(i);\n      }\n    }\n\n    return this._params;\n  }\n\n  get query (): querystring.ParsedUrlQuery {\n    if(!this._query) this._query = querystring.parse(this._rawquery);\n    return this._query;\n  }\n\n  get baseUrl() {\n    return this._baseUrl;\n  }\n\n  set baseUrl(baseUrl) {\n    this._baseUrl = baseUrl;\n  }\n\n  get path(): string {\n    const path = this.#_originalUrlParsed.pathname.replace(this._baseUrl, \"\");\n    return (!path.startsWith(\"/\"))\n      ? `/${path}`\n      : path;\n  }\n\n  get(name: string) {\n    return this.header(name);\n  }\n\n  header(name: string) {\n    name = name.toLowerCase();\n    return this._headers[name] || undefined;\n  }\n\n  accepts(...args: any[]): string | false {\n    return request.accepts.apply(this, arguments);\n  }\n\n  resume() { return this; }\n\n  on(event: string | symbol, listener: (...args: any[]) => void) {\n    if (event === 'data' && this._rawbody !== undefined) {\n      /**\n       * req.body is synchronously before any middleware runs.\n       * here we're mimicking to trigger 'data' + 'end' + 'close' right at the moment the event is registered.\n       */\n      setImmediate(() => {\n        listener(this._rawbody);\n        this.emit('end');\n        this.emit('close');\n      });\n    } else {\n      super.on(event, listener);\n    }\n    return this;\n  }\n\n  protected readBody () {\n    return new Promise<boolean>((resolve, reject) => {\n      let body: Buffer;\n\n      //\n      // ensure request is not halted when an invalid content-length is sent by the client\n      // https://github.com/endel/uWebSockets-express/issues/9\n      //\n      const rejectionTimeout = setTimeout(() => {\n        if (body) {\n          this._rawbody = body.toString();\n          this.headers['content-length'] = String(body.length);\n        }\n        reject();\n      }, READ_BODY_MAX_TIME);\n\n      this.res.onData((arrayBuffer, isLast) => {\n        const chunk = Buffer.from(arrayBuffer);\n        body = (body && body.length !== 0) ? Buffer.concat([body, chunk]) : chunk;\n\n        if (isLast) {\n          clearTimeout(rejectionTimeout);\n          this._rawbody = body.toString();\n          resolve(this._rawbody !== \"\");\n        }\n      });\n    })\n  }\n\n}\n"]}