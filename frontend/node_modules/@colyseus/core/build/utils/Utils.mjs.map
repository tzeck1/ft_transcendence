{
  "version": 3,
  "sources": ["../../src/utils/Utils.ts"],
  "sourcesContent": ["import nanoid from 'nanoid';\nimport { addExtension } from 'msgpackr';\n\nimport { debugAndPrintError } from '../Debug';\nimport { EventEmitter } from \"events\";\nimport { ServerOpts, Socket } from \"net\";\nimport { logger } from '../Logger';\nimport { Schema } from \"@colyseus/schema\";\n\n// remote room call timeouts\nexport const REMOTE_ROOM_SHORT_TIMEOUT = Number(process.env.COLYSEUS_PRESENCE_SHORT_TIMEOUT || 2000);\n\nexport function generateId(length: number = 9) {\n  return nanoid(length);\n}\n\n//\n// nodemon sends SIGUSR2 before reloading\n// (https://github.com/remy/nodemon#controlling-shutdown-of-your-script)\n//\nconst signals: NodeJS.Signals[] = ['SIGINT', 'SIGTERM', 'SIGUSR2'];\n\nexport function registerGracefulShutdown(callback: (err?: Error) => void) {\n  /**\n   * Gracefully shutdown on uncaught errors\n   */\n  process.on('uncaughtException', (err) => {\n    debugAndPrintError(err);\n    callback(err);\n  });\n\n  signals.forEach((signal) =>\n    process.once(signal, () => callback()));\n}\n\nexport function retry<T = any>(\n  cb: Function,\n  maxRetries: number = 3,\n  errorWhiteList: any[] = [],\n  retries: number = 0,\n) {\n  return new Promise<T>((resolve, reject) => {\n    cb()\n      .then(resolve)\n      .catch((e) => {\n        if (\n          errorWhiteList.indexOf(e.constructor) !== -1 &&\n          retries++ < maxRetries\n        ) {\n          setTimeout(() => {\n            retry<T>(cb, maxRetries, errorWhiteList, retries).\n              then(resolve).\n              catch((e2) => reject(e2));\n          }, Math.floor(Math.random() * Math.pow(2, retries) * 400));\n\n        } else {\n          reject(e);\n        }\n      });\n  });\n}\n\nexport function spliceOne(arr: any[], index: number): boolean {\n  // manually splice availableRooms array\n  // http://jsperf.com/manual-splice\n  if (index === -1 || index >= arr.length) {\n    return false;\n  }\n\n  const len = arr.length - 1;\n  for (let i = index; i < len; i++) {\n    arr[i] = arr[i + 1];\n  }\n\n  arr.length = len;\n  return true;\n}\n\nexport class Deferred<T= any> {\n  public promise: Promise<T>;\n\n  public resolve: Function;\n  public reject: Function;\n\n  constructor() {\n    this.promise = new Promise<T>((resolve, reject) => {\n      this.resolve = resolve;\n      this.reject = reject;\n    });\n  }\n\n  public then(func: (value: T) => any) {\n    return this.promise.then.apply(this.promise, arguments);\n  }\n\n  public catch(func: (value: any) => any) {\n    return this.promise.catch(func);\n  }\n\n}\n\nexport function merge(a: any, ...objs: any[]): any {\n  for (let i = 0, len = objs.length; i < len; i++) {\n    const b = objs[i];\n    for (const key in b) {\n      if (b.hasOwnProperty(key)) {\n        a[key] = b[key];\n      }\n    }\n  }\n  return a;\n}\n\nexport class HybridArray<T> {\n  public uniqueProperty: string;\n  public hashedArray: { [key: string]: T } = {};\n  public array: T[] = [];\n\n  constructor(uniquePropertyName: string, items?: T[]) {\n    this.uniqueProperty = uniquePropertyName;\n    if (items) {\n      this.array = this.array.concat(items);\n      for (const element of items) {\n        this.hashedArray[element[this.uniqueProperty]] = element;\n      }\n    }\n  }\n\n  public get length(): number {\n    return this.array.length;\n  }\n\n  public add(item: T) {\n    if (!this.hashedArray[item[this.uniqueProperty]]) {\n      this.array.push(item);\n      this.hashedArray[item[this.uniqueProperty]] = item;\n\n    } else {\n      logger.warn(`.add(): element already exists:`, item[this.uniqueProperty]);\n    }\n  }\n\n  public at(index: number): T | undefined {\n    if (index >= this.array.length) {\n      this._badIndexWarning(index);\n\n    } else {\n      return this.array[index];\n    }\n  }\n\n  public concat(items: T[]) {\n    if (items) {\n      for (const item of items) {\n        this.hashedArray[item[this.uniqueProperty]] = item;\n      }\n      this.array.concat(items);\n    }\n    return this;\n  }\n\n  public find<S extends T>(predicate: (this: void, value: T, index: number, obj: T[]) => value is S, thisArg?: any): S;\n  public find(predicate: (value: T, index: number, obj: T[]) => unknown, thisArg?: any): T;\n  public find(predicate: any, thisArg?: any): T | undefined {\n    return this.array.find(predicate, thisArg);\n  }\n\n  public filter(predicate: (value: T, index: number, array: T[]) => unknown, thisArg?: any): T[]\n  public filter<S extends T>(predicate: (value: T, index: number, array: T[]) => value is S, thisArg?: any): S[] {\n    return this.array.filter(predicate, thisArg);\n  }\n\n  public forEach(callbackfn: (value: T, index: number, array: T[]) => void, thisArg?: any): void {\n    Array.prototype.forEach.call(this.array, callbackfn);\n  }\n\n  public get(key: string): T | undefined {\n    return this.hashedArray[key];\n  }\n\n  public includes(element: T) {\n    return this.hashedArray[element[this.uniqueProperty]] !== undefined;\n  }\n\n  public indexOf(element: T): number {\n    return this.array.indexOf(element);\n  }\n\n  public map<U>(callback: (value: T, index: number, array: T[]) => U) {\n    const result: U[] = [];\n    for (let index = 0; index < this.array.length; index++) {\n      result.push(callback(this.array[index], index, this.array));\n    }\n    return result;\n  }\n\n  public deleteAt(index: number) {\n    if (index >= this.array.length) {\n      this._badIndexWarning(index);\n      return undefined;\n\n    } else {\n      const removable = this.spliceOne(index);\n      delete this.hashedArray[removable[this.uniqueProperty]];\n      return removable;\n    }\n  }\n\n  public deleteByKey(key: string): T {\n    if (!this.hashedArray[key]) {\n      logger.error(`deleteByKey(): no such element for '${key}'.`);\n      return undefined;\n    } else {\n      const removable = this.spliceOne(this.indexOf(this.hashedArray[key]));\n      delete this.hashedArray[key];\n      return removable;\n    }\n  }\n\n  public delete(obj: T): T {\n    if (this.hashedArray[obj[this.uniqueProperty]]) {\n      return this.deleteByKey(obj[this.uniqueProperty]);\n\n    } else if (this.indexOf(obj) != -1) {\n      return this.deleteAt(this.indexOf(obj));\n\n    } else {\n      return undefined;\n    }\n  }\n\n  private _badIndexWarning(index) {\n    logger.warn(`Index out of range, index: ${index}`);\n  }\n\n  private spliceOne(index: number): T {\n    // manually splice availableRooms array\n    // http://jsperf.com/manual-splice\n    if (index === -1 || index >= this.array.length) {\n      this._badIndexWarning(index);\n      return undefined;\n    }\n\n    const itemRemoved = this.array[index];\n\n    const len = this.array.length - 1;\n    for (let i = index; i < len; i++) {\n      this.array[i] = this.array[i + 1];\n    }\n    this.array.length = len;\n\n    return itemRemoved;\n  }\n}\n\nexport declare interface DummyServer {\n  constructor(options?: ServerOpts, connectionListener?: (socket: Socket) => void);\n\n  listen(port?: number, hostname?: string, backlog?: number, listeningListener?: () => void): this;\n  close(callback?: (err?: Error) => void): this;\n}\n\nexport class DummyServer extends EventEmitter {}\n\n// Add msgpackr extension to avoid circular references when encoding\n// https://github.com/kriszyp/msgpackr#custom-extensions\naddExtension({\n  Class: Schema,\n  type: 0,\n\n  read(datum: any): any {\n    return datum;\n  },\n\n  write(instance: any): any {\n    return instance.toJSON();\n  }\n});\n"],
  "mappings": "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",
  "names": []
}
