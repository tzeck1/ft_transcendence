{"version":3,"file":"ServerResponse.js","sourceRoot":"","sources":["../src/ServerResponse.ts"],"names":[],"mappings":"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","sourcesContent":["import fs from \"fs\";\nimport mime from \"mime\";\nimport EventEmitter from \"events\";\nimport uWS, { RecognizedString } from \"uWebSockets.js\";\nimport { ReasonPhrases, StatusCodes } from \"http-status-codes\";\nimport { Socket } from \"./Socket\";\nimport { response, CookieOptions } from \"express\";\nimport http from \"http\";\nimport merge from \"utils-merge\";\nimport cookie from \"cookie\";\nimport { sign } from 'cookie-signature';\n\nexport class ServerResponse extends EventEmitter /* implements http.ServerResponse */ {\n  private _headers: { [name: string]: string | string[] } = {};\n  private _writes: any[] = [];\n\n  public statusCode: number = 200;\n  // public socket = new Socket(true, false);\n  public headersSent: boolean = false;\n  public finished: boolean = false;\n  public aborted: boolean;\n  public locals: any = {};\n\n  public writableEnded = false;\n\n  constructor(\n    private res: uWS.HttpResponse,\n    private req: any,\n    private app: any,\n  ) {\n    super();\n    http.OutgoingMessage.call(this);\n  }\n\n  render(view: string, options?: any, callback?: (err: Error, html: string) => void): void\n  render(view: string, callback?: (err: Error, html: string) => void): void {\n    response.render.apply(this, arguments);\n  }\n\n  end(chunk?: string, encoding?: BufferEncoding) {\n    if (this.finished) { return; }\n\n    let body = chunk;\n    if (encoding) { body = Buffer.from(chunk, encoding).toString(); }\n\n    if (!this.writableEnded) {\n      // write status + headers\n      this.writeHead(this.statusCode || this.statusCode, this._headers);\n\n      // dequeue writes\n      this._writes.forEach((chunk) => this.res.write(chunk));\n\n      // write response\n      this.res.end(body);\n    }\n\n    // this.writableEnded = true;\n\n    this.finished = true;\n    this.emit('finish');\n\n    return this;\n  }\n\n  get(name: string) {\n    return this._headers[name.toLowerCase()];\n  }\n\n  hasHeader(name: string) {\n    return (this._headers[name.toLowerCase()] !== undefined);\n  }\n\n  getHeader(name: string) {\n    this.get(name);\n  }\n\n  setHeader(name: string, value: string | string[]) {\n    this.set(name, value);\n  }\n\n  removeHeader(name: string) {\n    delete this._headers[name.toLowerCase()];\n  }\n\n  status(code: number) {\n    this.statusCode = code;\n    return this;\n  }\n\n  sendStatus(statusCode: number) {\n    this.status(statusCode);\n    return this;\n  }\n\n  vary (field: string) {\n    let append = \"\";\n\n    if (!this._headers['vary']) {\n      this._headers['vary'] = \"\";\n      append = field;\n\n    } else {\n      append = `, ${field}`;\n    }\n\n    this._headers['vary'] += append;\n  }\n\n  sendFile(path: string, fn?: (err: Error) => void): void {\n    this.type(path);\n    fs.readFile(path, (err, contents) => {\n      if (err) return fn(err);\n      this.send(contents);\n    });\n  }\n\n  send(chunk?: RecognizedString) {\n    switch (typeof chunk) {\n      // string defaulting to html\n      case 'string':\n        if (!this.get('Content-Type')) {\n          this.type('html');\n        }\n        break;\n      case 'boolean':\n      case 'number':\n      case 'object':\n        if (chunk === null) {\n          chunk = '';\n        } else if (Buffer.isBuffer(chunk)) {\n          if (!this.get('Content-Type')) {\n            this.type('bin');\n          }\n        } else {\n          return this.json(chunk);\n        }\n        break;\n    }\n\n    return this.end(chunk as string);\n  }\n\n  // enqueue to write during .end()\n  write(chunk: RecognizedString) {\n    this._writes.push(chunk);\n    return this;\n  }\n\n  type(type: string) {\n    this.set('Content-Type', mime.getType(type) || type);\n    return this;\n  }\n\n  json(body: any) {\n    this.type('json').end(JSON.stringify(body));\n  }\n\n  jsonp(body: any) {\n    this.set('Content-Type', \"application/javascript\");\n    this.end(`callback(${JSON.stringify(body)})`);\n  }\n\n  location(url: string) {\n    // https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Location\n    return response.location.apply(this, arguments);\n  }\n\n  redirect(path: string)\n  redirect(code: number, path: string)\n  redirect(codeOrPath: number | string, path?: string) {\n    return response.redirect.apply(this, arguments);\n    // if (arguments.length === 1) {\n    //   path = codeOrPath as string;\n    //   codeOrPath = 302;\n    // }\n\n    // this.\n    //   status(codeOrPath as number).\n    //   location(path).\n    //   end();\n  }\n\n  format(obj: any) {\n    return response.format.apply(this, arguments);\n  }\n\n  set(name: string | object, value?: string | string[]) {\n    if (typeof(name) === \"string\") {\n      name = name.toLowerCase();\n      if (name !== 'content-length') {\n        this._headers[name] = value;\n      }\n\n    } else {\n      for (let _name in name) {\n        _name = _name.toLowerCase();\n        if (_name !== 'content-length') {\n          this._headers[_name] = name[_name];\n        }\n      }\n    }\n    return this;\n  }\n\n  append(name: string, val: string | string[]) {\n    const prev = this.get(name);\n    let value = val;\n    if (prev) {\n      // concat the new and prev vals\n      value = Array.isArray(prev) ? prev.concat(val)\n        : Array.isArray(val) ? [prev].concat(val)\n        : [prev, val];\n    }\n\n    return this.set(name, value);\n  }\n\n  // alias to \"set\"\n  header(name: string | object, value?: string | string[]) {\n    return this.set(name, value);\n  }\n\n  writeHead(code: number, headers: { [name: string]: string | string[] } = this._headers) {\n    if (this.headersSent) {\n      console.warn(\"writeHead: headers were already sent.\")\n      return;\n    }\n\n    // write status\n    const reason = ReasonPhrases[StatusCodes[code]];\n    this.res.writeStatus(`${code} ${reason}`);\n\n    // write headers\n    for (const name in headers) {\n      if(Array.isArray(headers[name])) {\n        for(const headerValue of headers[name]) {\n          this.res.writeHeader(name, headerValue?.toString());\n        }\n      } else {\n        this.res.writeHeader(name, headers[name]?.toString());\n      }\n    }\n\n    this.headersSent = true;\n  }\n\n  cookie(name: string, value: string | Record<string, unknown>, options: CookieOptions) {\n\n    const opts = merge({}, options) as CookieOptions;\n    const secret = this.req.secret || null;\n    const signed = opts.signed || false;\n\n    if (signed && !secret) {\n      throw new Error('cookieParser(\"secret\") required for signed cookies');\n    }\n\n    let val = typeof value === 'object'\n      ? 'j:' + JSON.stringify(value)\n      : String(value);\n\n    if (signed) {\n      val = 's:' + sign(val, secret);\n    }\n\n    if ('maxAge' in opts) {\n      opts.expires = new Date(Date.now() + opts.maxAge);\n      opts.maxAge /= 1000;\n    }\n\n    if (opts.path == null) {\n      opts.path = '/';\n    }\n\n    return this.append('Set-Cookie', cookie.serialize(name, String(val), opts));\n\n  }\n\n  clearCookie(name: string, options: Record<string, string | number>) {\n\n    const opts = merge({ expires: new Date(1), path: '/' }, options);\n    return this.cookie(name, '', opts);\n\n  }\n\n  // express-session [??]\n  private _implicitHeader () {\n    const code = StatusCodes.OK;\n    const reason = ReasonPhrases[StatusCodes[code]];\n    this.res.writeStatus(`${code} ${reason}`);\n  }\n}\n"]}